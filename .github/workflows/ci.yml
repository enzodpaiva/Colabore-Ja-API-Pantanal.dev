name: CI workflow

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/workflows/ci.yaml'
  push:
    branches: [main]
    paths:
      - 'src/**'
      - '.github/workflows/ci.yaml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          docker-compose up -d --build
        working-directory: ./

      - name: Run Maven Build
        run: docker run --rm -v "$PWD":/app -w /app maven:3.8.1-openjdk-17-slim mvn clean install -DskipTests
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/colaboreja
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

#      - name: Run Tests (If applicable)
#        run: docker run --rm -v "$PWD":/app -w /app maven:3.8.1-openjdk-17-slim mvn test
#
#      - name: Executa testes
#        run: mvn -Dspring.profiles.active=test --batch-mode --update-snapshots verify
#
#      - name: ðŸš€ Coveralls Coverage Report Submission
#        run: mvn coveralls:report --define repoToken=${{ secrets.COVERALLS_REPO_TOKEN }}

      - name: Analisa com SonarCloud
        run: mvn -B verify sonar:sonar -Dspring.profiles.active=test -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}